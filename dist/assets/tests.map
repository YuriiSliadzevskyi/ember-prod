{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","prodl/tests/integration/components/prod-form-test.js","prodl/tests/lint/app.lint-test.js","prodl/tests/lint/templates.template.lint-test.js","prodl/tests/lint/tests.lint-test.js","prodl/tests/test-helper.js","prodl/tests/unit/routes/index-test.js","prodl/tests/unit/routes/prod-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"prodl/tests/integration/components/prod-form-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | prod-form', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"XYK48cw4\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[21,\\\"prod-form\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"VQDSKsNs\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"prod-form\\\",null,null,{\\\"statements\\\":[[0,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"prodl/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/prod-form.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/prod-form.js should pass ESLint\\n\\n4:9 - Use import { inject } from \\'@ember/service\\'; instead of using Ember.inject.service (ember/new-module-imports)\\n4:9 - \\'Ember\\' is not defined. (no-undef)\\n6:3 - Only string, number, symbol, boolean, null, undefined, and function are allowed as default properties (ember/avoid-leaking-state-in-ember-objects)');\n  });\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/prod.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/prod.js should pass ESLint\\n\\n4:9 - Use import { inject } from \\'@ember/service\\'; instead of using Ember.inject.service (ember/new-module-imports)\\n4:9 - \\'Ember\\' is not defined. (no-undef)');\n  });\n});","define(\"prodl/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('prodl/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'prodl/templates/application.hbs should pass TemplateLint.\\n\\nprodl/templates/application.hbs\\n  2:37  error  Incorrect indentation for `<a>` beginning at L2:C37. Expected `<a>` to be at an indentation of 4 but was found at 37.  block-indentation\\n');\n  });\n  QUnit.test('prodl/templates/components/prod-form.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'prodl/templates/components/prod-form.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('prodl/templates/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'prodl/templates/index.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('prodl/templates/prod.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'prodl/templates/prod.hbs should pass TemplateLint.\\n\\nprodl/templates/prod.hbs\\n  7:2  error  Incorrect indentation for `<tr>` beginning at L7:C2. Expected `<tr>` to be at an indentation of 4 but was found at 2.  block-indentation\\n  14:2  error  Incorrect indentation for `{{#each}}` beginning at L14:C2. Expected `{{#each}}` to be at an indentation of 4 but was found at 2.  block-indentation\\n');\n  });\n});","define(\"prodl/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('integration/components/prod-form-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/prod-form-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/index-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/prod-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/prod-test.js should pass ESLint\\n\\n');\n  });\n});","define(\"prodl/tests/test-helper\", [\"prodl/app\", \"prodl/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"prodl/tests/unit/routes/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:index');\n      assert.ok(route);\n    });\n  });\n});","define(\"prodl/tests/unit/routes/prod-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | prod', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:prod');\n      assert.ok(route);\n    });\n  });\n});","define('prodl/config/environment', [], function() {\n  var prefix = 'prodl';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('prodl/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}